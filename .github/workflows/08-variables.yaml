name: 08 - Using Variables
on:
  push:
  workflow_dispatch:
env:
  WORKFLOW_VAR: I'm a workflow env var
  OVERWRITTEN: I will be overwritten
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}


jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: I'm a job env var
      OVERWRITTEN: I have been overwritten at the job level
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: I'm a step env var
          step_var2: I am another step var
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var2: ${{ env.step_var2 }}"
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten: ${{ env.OVERWRITTEN }}"
      - name: Overwrite job variable
        env:
          OVERWRITTEN: I have been overwritten at the step level
        run: |
          echo "Overwritten: ${{ env.OVERWRITTEN }}"
  
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Variables
        run: |
          echo "repository var: ${{ vars.REPOSITORY_VAR }}"

  echo3:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print Prod Environment Variables
        run: |
          echo "repository var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environment var: ${{ vars.TARGET_VAR }}"

  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print Undefined Variables
        run: |
          echo "repository var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
          echo "repository var: ${{ vars.REPOSITORY_VAR }}"
          echo "TEST WHAT HAPPENS IF IT IS ACTUALLY UNDEFINED: ${{ vars.TEST_UNDEFINED_VAR}}"